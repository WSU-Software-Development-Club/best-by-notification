services:
  backend:
    build:
      context: ./flask-server
    container_name: flask-backend
    ports:
      - "5000:5000"
    env_file:
      - ./flask-server/.env
    depends_on:
      - db # Ensure backend waits for the db to be available
    networks:
      - app-network
    volumes:
      - app-data:/flask-server/instance # Persist the database
    # command: gunicorn -w 4 -b 0.0.0.0:5000 server:app # Ensure Flask starts with Gunicorn
  frontend:
    build:
      context: ./client
      args:
        REACT_APP_API_BASE_URL: "http://localhost:5000" # Pass as build arg
    container_name: react-frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_BASE_URL: "http://localhost:5000" # Frontend API URL for the backend
    networks:
      - app-network
  db:
    image: postgres:latest
    container_name: postgres-db
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - ./flask-server/.env # Use environment variables from .env file
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data # Persist database data

networks:
  app-network:
    driver: bridge

volumes:
  app-data:
    driver: local
  postgres-data: # Volume for PostgreSQL data persistence
    driver: local
